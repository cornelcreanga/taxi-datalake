version: '3'


services:

  neo4j:
    image: 'neo4j:latest'
    hostname: neo4j
    container_name: neo4j
    networks:
      - apptier
    ports:
      - "7474:7474"
      - "7687:7687"
#    depends_on:
#      - kafka
    volumes:
      - ./neo4j/plugins:/plugins
    environment:
      NEO4J_AUTH: neo4j/streams
      NEO4J_dbms_logs_debug_level: DEBUG
      # KAFKA related configuration
#      NEO4J_kafka_bootstrap_servers: kafka:19092
#      NEO4J_streams_source_topic_nodes_neo4j: Person{*}
#      NEO4J_streams_source_topic_relationships_neo4j: KNOWS{*}

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    hostname: zookeeper
    networks:
      - apptier
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    hostname: kafka
    image: 'bitnami/kafka:latest'
    ports:
      - '9093:9093'
    networks:
      - apptier
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT

  streaming:
    container_name: streaming
    image: streaming:latest
    build: ../../ingestion-streaming
    environment:
      - ENV=local
      - INSTANCE_ID=1
      - LOCAL_STORAGE=/localfiles
      - REDIS_HOST=redis:6379
    ports:
      - "8088:8088"
      - "10010:10010"
    expose:
      - "8088"
      - "10010"
    networks:
      - apptier

    depends_on:
      - kafka

networks:
  apptier:

